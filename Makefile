#############################################################################
# Makefile for building: game_jacksocd
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon Apr 29 20:11:29 2013
# Project:  game_jacksocd.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_jacksocd.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = charizard.cpp \
		feraligatr.cpp \
		fireball.cpp \
		game.cpp \
		gastly.cpp \
		GraphicWindow.cpp \
		mainwindow.cpp \
		spikes.cpp \
		thing.cpp \
		wingull.cpp moc_GraphicWindow.cpp \
		moc_mainwindow.cpp
OBJECTS       = charizard.o \
		feraligatr.o \
		fireball.o \
		game.o \
		gastly.o \
		GraphicWindow.o \
		mainwindow.o \
		spikes.o \
		thing.o \
		wingull.o \
		moc_GraphicWindow.o \
		moc_mainwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_jacksocd.pro
QMAKE_TARGET  = game_jacksocd
DESTDIR       = 
TARGET        = game_jacksocd

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_jacksocd.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_jacksocd.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_jacksocd.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_jacksocd1.0.0 || $(MKDIR) .tmp/game_jacksocd1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_jacksocd1.0.0/ && $(COPY_FILE) --parents charizard.h feraligatr.h fireball.h gastly.h GraphicWindow.h mainwindow.h mylist.h spikes.h thing.h wingull.h .tmp/game_jacksocd1.0.0/ && $(COPY_FILE) --parents charizard.cpp feraligatr.cpp fireball.cpp game.cpp gastly.cpp GraphicWindow.cpp mainwindow.cpp spikes.cpp thing.cpp wingull.cpp .tmp/game_jacksocd1.0.0/ && (cd `dirname .tmp/game_jacksocd1.0.0` && $(TAR) game_jacksocd1.0.0.tar game_jacksocd1.0.0 && $(COMPRESS) game_jacksocd1.0.0.tar) && $(MOVE) `dirname .tmp/game_jacksocd1.0.0`/game_jacksocd1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_jacksocd1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_GraphicWindow.cpp moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_GraphicWindow.cpp moc_mainwindow.cpp
moc_GraphicWindow.cpp: mainwindow.h \
		GraphicWindow.h \
		thing.h \
		charizard.h \
		mylist.h \
		GraphicWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GraphicWindow.h -o moc_GraphicWindow.cpp

moc_mainwindow.cpp: GraphicWindow.h \
		mainwindow.h \
		thing.h \
		charizard.h \
		mylist.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

charizard.o: charizard.cpp charizard.h \
		thing.h \
		fireball.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o charizard.o charizard.cpp

feraligatr.o: feraligatr.cpp feraligatr.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o feraligatr.o feraligatr.cpp

fireball.o: fireball.cpp fireball.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fireball.o fireball.cpp

game.o: game.cpp mainwindow.h \
		GraphicWindow.h \
		thing.h \
		charizard.h \
		mylist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

gastly.o: gastly.cpp gastly.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gastly.o gastly.cpp

GraphicWindow.o: GraphicWindow.cpp GraphicWindow.h \
		mainwindow.h \
		thing.h \
		charizard.h \
		mylist.h \
		fireball.h \
		spikes.h \
		feraligatr.h \
		gastly.h \
		wingull.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GraphicWindow.o GraphicWindow.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		GraphicWindow.h \
		thing.h \
		charizard.h \
		mylist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

spikes.o: spikes.cpp spikes.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spikes.o spikes.cpp

thing.o: thing.cpp thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thing.o thing.cpp

wingull.o: wingull.cpp wingull.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wingull.o wingull.cpp

moc_GraphicWindow.o: moc_GraphicWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GraphicWindow.o moc_GraphicWindow.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

